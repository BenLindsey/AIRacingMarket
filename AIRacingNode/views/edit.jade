include ./basic_navigator.jade

block content

  .div(align='left')
    h3.
      Edit your Racing Script

  script(type='text/javascript', src='/events.js')
  script.
      var editScript = !{JSON.stringify(scriptName)};
      var language = !{JSON.stringify(language)};
      var csScript = !{JSON.stringify(csScript)};
      var scripts = [{name: !{JSON.stringify(scriptName)}, content:!{JSON.stringify(script)}},
                     {name: !{JSON.stringify(scriptName)}, content:!{JSON.stringify(script)}} ];
      var levelname = "OvalTrack";
      var carname = "Catamount";
    
      var mapScripts = function(script) {
         scripts = scripts.map(function(s) {
              if(s.name == !{JSON.stringify(scriptName)}) {
                  s.content = script;
                  s.update = buildUpdate(s.content); 
              }

              return s;
          });
      }

      var updateScript = function() {
          var script = document.getElementById('newScriptForm').elements["inputScript"].value;   
          
          if(language == "CoffeeScript") {
              $.post("/compile", { script: script },  function(data) { 
                  mapScripts(data); 
              });
          } else {
              mapScripts(script);
          }  
      };
      
      var gamemode = "Test";     
      var restartRace = function() {
          console.log("Restart!");
          //This function is replaced when unity is built!
      };
 
      var allScripts = !{JSON.stringify(allScripts)};

      var handleOpponentChange = function() {
          var select = document.getElementById("selectOpponent");
          var opponent = select.options[select.selectedIndex].text;

          console.log("Setting opponent to: " + opponent);
          
          for (var i = 0; i < allScripts.length; i++) {
              var s = allScripts[i];

              if(s.scriptName == opponent) {
                  scripts[1] = {name : s.scriptName, content : s.script, update : buildUpdate(s.script)};
                  break;
              }
          }
      };
      
      var updateLanguage = function() {
          var select = document.getElementById("selectLanguage");
          var language = select.options[select.selectedIndex].text;
          //language = JavaScript or CoffeeScript
            
          //TODO UPDATE EDITOR SYNTAX HIGHLIGHTING
      }

  #editor
    .div(align='left')
      div.well.bs-component
        form#newScriptForm.form-horizontal(method='post')
            fieldset
              .row
                  .col-lg-14
                    .form-group
                      label.col-lg-1.control-label(for='inputScriptName') Script
                      .col-lg-5
                        input#inputScriptName.form-control(value=scriptName, type='text', name="scriptname", readonly="true")
                      .col-lg-4
                      button.btn.btn-default(type='button')#hide-editor Hide
                      .col-lg-1
                    .form-group
                      label.col-lg-1.control-label(for='selectLanguage') Language
                      .col-lg-5
                        select#selectLanguage.form-control(placeholder='Select Language', name="language", readonly="true")
                          - if (language != "CoffeeScript") {
                          option JavaScript
                          - } else {
                          option CoffeeScript
                          - }
                      .col-lg-1
                    .form-group
                      label.col-lg-1.control-label(for='inputScript')
                      .col-lg-10
                        textarea#inputScript(name='script',data-editor="javascript")
                      .col-lg-1
                    .form-group
                      br
                      label.col-lg-1.control-label(for='inputAIName') Enemy
                      .col-lg-5
                        select#selectOpponent.form-control(placeholder='Select Script', name="opponent", onchange='handleOpponentChange()')
                            - if (allScripts.length) {
                            each entry, i in allScripts
                                option(selected=entry.name == !{JSON.stringify(scriptName)})= entry.scriptName
                            - }
                      .col-lg-1
                      .col-lg-6.col-lg-offset-2
                      .btn-group
                        button.btn.btn-default(type='button', onclick='updateScript()') Update
                        button.btn.btn-primary(type='submit') Submit
                        button.btn.btn-danger(type='button', onclick='restartRace()') Restart
  #restore-editor
    button.btn-default.btn-lg.btn-block(type='button')#show-editor Restore Editor
    br

  #tab-game
    div.well.bs-component
      include ../public/WebBuild.html

  script.
      $(function() {
        $("#hide-editor").click(function() {
          $("#editor").toggle();
          $("#show-editor").toggle();
        });
      });
      $(function() {
        $("#show-editor").click(function() {
          $("#editor").toggle();
          $("#show-editor").toggle();
        });
      });


  script(src="http://ajaxorg.github.io/ace-builds/src/ace.js")
  script(type='text/javascript').
    $(document).ready(function () {

      $("#show-editor").hide();
      $("#editor").show();

      $('textarea[data-editor]').each(function () {

        var textarea = $(this);
        var mode = textarea.data('editor');

        var editDiv = $('<div>', {
          position:'absolute',
          width:textarea.parent().width(),
          height:textarea.height(),
          'class':textarea.attr('class')
        }).insertBefore(textarea);

        textarea.css('display', 'none');

        var editor = ace.edit(editDiv[0]);

        editor.setOptions({
          maxLines:15
        });
        editor.getSession().on('change', function(){
          textarea.val(editor.getSession().getValue());
        });
       
        var lang = !{JSON.stringify(language)};

        if(!lang || lang != "CoffeeScript") {
          editor.getSession().setValue(!{JSON.stringify(script)});
          editor.getSession().setMode("ace/mode/javascript");
        } else {
          editor.getSession().setValue(!{JSON.stringify(csScript)});
          editor.getSession().setMode("ace/mode/coffee");
        }

        editor.resize();
        editor.renderer.setShowGutter(true);
        editor.renderer.setVScrollBarAlwaysVisible(true);
        editor.setFontSize("14px");
        editor.setTheme("ace/theme/solarized_light");
        editor.setEnableBasicAutocompletion(true);
      });
    });


